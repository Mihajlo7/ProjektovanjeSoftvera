/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import clock.Clock;
import domain.Clan;
import domain.Knjiga;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import kontroler.OpstiKontrolerClanaKI;
import tablemodel.KnjigeTableModel;

/**
 *
 * @author Mihajlo
 */
public class FrmBookView extends javax.swing.JFrame {

    /**
     * Creates new form FrmBookView
     */
    Clan clan;
    Clock clock;
    Knjiga knjiga;
    public FrmBookView(Clan clan) {
        initComponents();
        this.clan=clan;
        clock=new Clock(lblClock);
        namestiPolja();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnIzloguj = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNazivKnjige = new javax.swing.JTextField();
        txtAutor = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBooks = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        comboZanrovi = new javax.swing.JComboBox<>();
        btnPretrazi = new javax.swing.JButton();
        lblPozdrav = new javax.swing.JLabel();
        lblClock = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnIzloguj.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnIzloguj.setText("izloguj se");
        btnIzloguj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzlogujActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Naziv knjige:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Autor knjige:");

        txtNazivKnjige.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtAutor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAutorActionPerformed(evt);
            }
        });

        tableBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBooks);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Zanr knjige:");

        comboZanrovi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboZanrovi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnPretrazi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPretrazi.setText("Pretrazi  primerke");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtAutor))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNazivKnjige, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPretrazi, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(comboZanrovi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNazivKnjige, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(comboZanrovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(btnPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        lblPozdrav.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPozdrav.setText("Clan: ");

        lblClock.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblClock.setText("12:00:00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnIzloguj, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPozdrav)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblClock)
                        .addGap(123, 123, 123))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPozdrav)
                    .addComponent(lblClock))
                .addGap(18, 18, 18)
                .addComponent(btnIzloguj, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAutorActionPerformed

    private void btnIzlogujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzlogujActionPerformed
        try {
            // TODO add your handling code here:
            if(izlogujSe()){
                JOptionPane.showMessageDialog(this, "Uspesno ste se odjavili sa sistema!");
                dispose();
                new FrmLoginMember(this,true).setVisible(true);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex,"GRESKA",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIzlogujActionPerformed

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        try {
            // TODO add your handling code here:
            HashMap<String,String> kriterijum=vratiKriterijum();
            List<Knjiga> nadjeneKnjige=vratiPrimerkePoKriterijumu(kriterijum);
            postaviTabeluKnjige(nadjeneKnjige);
            JOptionPane.showMessageDialog(this, "Pronadjeno je "+nadjeneKnjige.size()+" knjiga.");
            ocistiPolja();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex,"GRESKA",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void tableBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBooksMouseClicked
        try {
            // TODO add your handling code here:
            KnjigeTableModel model=(KnjigeTableModel) tableBooks.getModel();
            int sifra=model.vratiSifru(tableBooks.getSelectedRow());
            //JOptionPane.showMessageDialog(this, sifra);
            ucitajKnjigu(sifra);
            boolean uspesno=proveriKnjigu();
            JOptionPane.showMessageDialog(this,"sifra:"+knjiga.getSifra()+"\nnaziv:"+knjiga.getNaziv()+"\nautor:"+knjiga.getAutor()+
                    (uspesno==true?"\nOvaj primerak knjige je slobodan":"\nOvaj primerak knjige nije slobodan"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex,"GRESKA",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tableBooksMouseClicked

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzloguj;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JComboBox<String> comboZanrovi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblClock;
    private javax.swing.JLabel lblPozdrav;
    private javax.swing.JTable tableBooks;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtNazivKnjige;
    // End of variables declaration//GEN-END:variables

    private void namestiPolja() {
        try {
            lblPozdrav.setText(lblPozdrav.getText()+clan.getIme()+" "+clan.getPrezime());
            setTitle("Pretraga knjiga");
            namestiCombo();
            namestiTabelu();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex,"GRESKA",JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean izlogujSe() throws Exception {
        return OpstiKontrolerClanaKI.getInstance().izlogujSe();
    }

    private void namestiCombo() throws Exception {
        DefaultComboBoxModel model=new DefaultComboBoxModel(OpstiKontrolerClanaKI.getInstance().ucitajZanrove().toArray());
        comboZanrovi.setModel(model);
        comboZanrovi.setSelectedIndex(-1);
    }

    private void namestiTabelu() {
        KnjigeTableModel model=new KnjigeTableModel();
        tableBooks.setModel(model);
    }
    private HashMap<String,String> vratiKriterijum(){
        HashMap<String,String> kriterijum=new HashMap<>();
        if(!txtAutor.getText().isEmpty()){
            kriterijum.put("autorKnjige",txtAutor.getText());
        }
        if(!txtNazivKnjige.getText().isEmpty()){
            kriterijum.put("nazivKnjige",txtNazivKnjige.getText());
        }
        if(comboZanrovi.getSelectedIndex()>-1){
            kriterijum.put("zanrKnjige", (String) comboZanrovi.getSelectedItem());
        }
        return kriterijum;
    }

    private List<Knjiga> vratiPrimerkePoKriterijumu(HashMap<String, String> kriterijum) throws Exception {
        return OpstiKontrolerClanaKI.getInstance().nadjiPrimerke(kriterijum);
    }

    private void postaviTabeluKnjige(List<Knjiga> nadjeneKnjige) {
        KnjigeTableModel model=(KnjigeTableModel) tableBooks.getModel();
        model.setKnjige(nadjeneKnjige);
    }

    private void ocistiPolja() {
        txtAutor.setText("");
        txtNazivKnjige.setText("");
        comboZanrovi.setSelectedIndex(-1);
    }

    private void ucitajKnjigu(int sifra) throws Exception {
        knjiga=new Knjiga();
        knjiga=OpstiKontrolerClanaKI.getInstance().ucitajKnjigu(sifra);
    }

    private boolean proveriKnjigu() throws Exception {
        return OpstiKontrolerClanaKI.getInstance().proveraKnjige(knjiga);
    }
}
