/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package forms;

import controller.OpstiKontrolerKI;
import domain.Clan;
import domain.Grad;
import exception.ServerskiException;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import mods.MemberMod;

/**
 *
 * @author Mihajlo
 */
public class FrmMemberDetails extends javax.swing.JDialog {

    /**
     * Creates new form FrmMemberDetails
     */
    MemberMod mod;
    Clan clan;
    FrmMember forma;
    public FrmMemberDetails(MemberMod mod){
        //this();
        initComponents();
        this.mod=mod;
        setSize(1000, 600);
        namestiPolja();
    }
    public FrmMemberDetails(Clan clan,MemberMod mod,FrmMember forma){
        this.forma=forma;
        this.clan=clan;
        initComponents();
        this.mod=mod;
        setSize(1000, 600);
       namestiPolja();
        
    }
    public FrmMemberDetails() {
        initComponents();
        setSize(1000, 600);
        


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSifra = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTelefon = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        comboVrstaClanskihKarata = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        comboGradovi = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtLozinka = new javax.swing.JTextField();
        lblErrorEmail = new javax.swing.JLabel();
        lblErrorLoz = new javax.swing.JLabel();
        btnIzmeniPodatke = new javax.swing.JButton();
        btnNazad = new javax.swing.JButton();
        btnDeaktivirajClanstvo = new javax.swing.JButton();
        btnSacuvajIzmene = new javax.swing.JButton();
        btnZapamtiClana = new javax.swing.JButton();
        lblErrorIme = new javax.swing.JLabel();
        lblErrorPrezime = new javax.swing.JLabel();
        lblErrorTelefon = new javax.swing.JLabel();
        lblErrorVCK = new javax.swing.JLabel();
        lblErrorGrad = new javax.swing.JLabel();
        lblAktivnost = new javax.swing.JLabel();
        btnKreirajClana = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Šifra člana:");

        txtSifra.setEditable(false);
        txtSifra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Ime:");

        txtIme.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtIme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Prezime:");

        txtPrezime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Telefon");

        txtTelefon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTelefon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Vrsta članske karte: ");

        comboVrstaClanskihKarata.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboVrstaClanskihKarata.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Prebivalište člana:");

        comboGradovi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboGradovi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Email:");

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Lozinka: ");

        txtLozinka.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblErrorEmail.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblErrorEmail.setForeground(new java.awt.Color(255, 0, 51));
        lblErrorEmail.setText("Morate uneti email!");

        lblErrorLoz.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblErrorLoz.setForeground(new java.awt.Color(255, 0, 51));
        lblErrorLoz.setText("Morate uneti lozinku!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblErrorEmail)
                            .addComponent(txtLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorLoz))))
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(12, 12, 12)
                .addComponent(lblErrorEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblErrorLoz)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        btnIzmeniPodatke.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnIzmeniPodatke.setText("Izmeni podatke");
        btnIzmeniPodatke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniPodatkeActionPerformed(evt);
            }
        });

        btnNazad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnNazad.setText("Nazad");
        btnNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNazadActionPerformed(evt);
            }
        });

        btnDeaktivirajClanstvo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDeaktivirajClanstvo.setText("Deaktiviraj članstvo");
        btnDeaktivirajClanstvo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeaktivirajClanstvoActionPerformed(evt);
            }
        });

        btnSacuvajIzmene.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSacuvajIzmene.setText("Sačuvaj izmene");
        btnSacuvajIzmene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajIzmeneActionPerformed(evt);
            }
        });

        btnZapamtiClana.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnZapamtiClana.setText("Zapamti člana");
        btnZapamtiClana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZapamtiClanaActionPerformed(evt);
            }
        });

        lblErrorIme.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblErrorIme.setForeground(new java.awt.Color(255, 0, 51));
        lblErrorIme.setText("Morate uneti ime!");

        lblErrorPrezime.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblErrorPrezime.setForeground(new java.awt.Color(255, 0, 51));
        lblErrorPrezime.setText("Morate uneti prezime!");

        lblErrorTelefon.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblErrorTelefon.setForeground(new java.awt.Color(255, 0, 51));
        lblErrorTelefon.setText("Morate uneti telefon!");

        lblErrorVCK.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblErrorVCK.setForeground(new java.awt.Color(255, 0, 51));
        lblErrorVCK.setText("Morate odrediti vrstu članske karte!");

        lblErrorGrad.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblErrorGrad.setForeground(new java.awt.Color(255, 0, 51));
        lblErrorGrad.setText("Morate uneti grad člana!");

        lblAktivnost.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAktivnost.setText("Aktivnost clana:");

        btnKreirajClana.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnKreirajClana.setText("Kreiraj člana");
        btnKreirajClana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajClanaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTelefon)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblErrorTelefon)
                                            .addComponent(lblErrorPrezime))
                                        .addGap(82, 82, 82)))
                                .addGap(177, 177, 177))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblErrorIme, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrezime, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                                    .addComponent(txtIme)
                                    .addComponent(txtSifra))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblErrorVCK)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboVrstaClanskihKarata, 0, 197, Short.MAX_VALUE)
                                    .addComponent(comboGradovi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(lblErrorGrad)
                            .addComponent(lblAktivnost, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNazad, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(btnKreirajClana, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSacuvajIzmene, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(99, 99, 99))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnIzmeniPodatke, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(btnDeaktivirajClanstvo, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(206, 206, 206)
                                .addComponent(btnZapamtiClana, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSifra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(comboVrstaClanskihKarata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorVCK))
                .addGap(18, 18, 18)
                .addComponent(lblErrorIme)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(comboGradovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblErrorPrezime)
                    .addComponent(lblErrorGrad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblErrorTelefon)
                    .addComponent(lblAktivnost))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnIzmeniPodatke, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeaktivirajClanstvo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addComponent(btnSacuvajIzmene, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnKreirajClana, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnZapamtiClana, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNazad, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)))
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtImeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImeActionPerformed

    private void btnZapamtiClanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZapamtiClanaActionPerformed
        // TODO add your handling code here:
        try{
        if(proveriSvaPolja()){
          if(proveriEmail()){  
          JOptionPane.showMessageDialog(this, "Uspesno ste popunili sva polja!");
          zapamtiClana();
          if(forma!=null){
              forma.postaviClanove();
          }
          //dispose();
          }else{
              JOptionPane.showMessageDialog(this,"Ovaj email vec postoji!","Email postoji",JOptionPane.WARNING_MESSAGE);
          }
        }else{
            JOptionPane.showMessageDialog(this, "Nepravilno uneta polja!!","GRESKA",JOptionPane.ERROR_MESSAGE);
        }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti clana","GRESKA",JOptionPane.ERROR_MESSAGE);
            dispose();
        }
    }//GEN-LAST:event_btnZapamtiClanaActionPerformed

    private void txtTelefonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonActionPerformed

    private void btnNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNazadActionPerformed
        // TODO add your handling code here:
        if(clan==null){
           dispose(); 
        } else{
        if(mod==MemberMod.CREATE_MOD){
            int option=JOptionPane.showConfirmDialog(this, "Da li ste sigurni da hocete da izadjete?\nUkoliko izadjete podaci nece biti sacuvani!","",JOptionPane.YES_NO_OPTION);
            if(option==0){
                obrisiClana();
                dispose();
            }
        }
        if(mod==MemberMod.CHANGE_MOD)
            dispose();
        }
        //new FrmBook().setVisible(true);
    }//GEN-LAST:event_btnNazadActionPerformed

    private void btnIzmeniPodatkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniPodatkeActionPerformed
        // TODO add your handling code here:
        namestiTxt(true);
        btnSacuvajIzmene.setEnabled(true);
        
    }//GEN-LAST:event_btnIzmeniPodatkeActionPerformed

    private void btnDeaktivirajClanstvoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeaktivirajClanstvoActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(this, "Da li hocete da deaktivirate clanstvo ovom clanu?","Deaktiviranje clanstva",JOptionPane.YES_NO_OPTION);
        int option=JOptionPane.showConfirmDialog(this,"Da li hocete da deaktivirate clanstvo ovom clanu?","Deaktiviranje clanstva",JOptionPane.YES_NO_OPTION );
        if(option==0){
            try {
                boolean uspesan=OpstiKontrolerKI.getInstance().deaktivirajClanstvo(clan);
                if(uspesan){
                    JOptionPane.showMessageDialog(this, "Sistem je deaktivirao clanstvo clana sa sifrom "+clan.getSifra());
                    forma.postaviClanove();
                    dispose();
                }else{
                    JOptionPane.showMessageDialog(this, "Neuspesno je deaktivirano clanstvo","",JOptionPane.ERROR_MESSAGE);
                    dispose();
                }
            } catch (ServerskiException ex) {
                JOptionPane.showMessageDialog(this, ex,"GRESKA",JOptionPane.ERROR_MESSAGE);
            } catch(Exception ex){
                JOptionPane.showMessageDialog(this, "Sistem ne moze da deaktivira clanstvo","GRESKA",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeaktivirajClanstvoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(clan==null){
           dispose(); 
        }else{
        if(mod==MemberMod.CREATE_MOD){
        JOptionPane.showMessageDialog(this, "Podaci o clanu ce biti obrisani","Izlazak",JOptionPane.CANCEL_OPTION);
        obrisiClana();
        }
        dispose();
        }
            
    }//GEN-LAST:event_formWindowClosing

    private void btnSacuvajIzmeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajIzmeneActionPerformed
        try {
            // TODO add your handling code here:
            zapamtiClana();
            forma.postaviClanove();
            dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti clana","GRESKA",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSacuvajIzmeneActionPerformed

    private void btnKreirajClanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajClanaActionPerformed
        try {
            // TODO add your handling code here:
            kreirajNovogClana();
            btnKreirajClana.setEnabled(false);
            podesiPolja(true);
        } catch (ServerskiException ex) {
            JOptionPane.showMessageDialog(this, ex,"GRESKA",JOptionPane.ERROR_MESSAGE);
            dispose();
            setVisible(false);
        } catch (Exception ex){
            JOptionPane.showMessageDialog(this, "Sistem ne moze da kreira novog clana","GRESKA",JOptionPane.ERROR_MESSAGE);
            dispose();
            setVisible(false);
        }
    }//GEN-LAST:event_btnKreirajClanaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeaktivirajClanstvo;
    private javax.swing.JButton btnIzmeniPodatke;
    private javax.swing.JButton btnKreirajClana;
    private javax.swing.JButton btnNazad;
    private javax.swing.JButton btnSacuvajIzmene;
    private javax.swing.JButton btnZapamtiClana;
    private javax.swing.JComboBox<String> comboGradovi;
    private javax.swing.JComboBox<String> comboVrstaClanskihKarata;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAktivnost;
    private javax.swing.JLabel lblErrorEmail;
    private javax.swing.JLabel lblErrorGrad;
    private javax.swing.JLabel lblErrorIme;
    private javax.swing.JLabel lblErrorLoz;
    private javax.swing.JLabel lblErrorPrezime;
    private javax.swing.JLabel lblErrorTelefon;
    private javax.swing.JLabel lblErrorVCK;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtLozinka;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JTextField txtSifra;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables

    public void namestiPolja() {
        try {
            setTitle("Pretraga clanova");
            namestiComboBox();
            namestiErrorLbl();
            switch(mod){
                case CREATE_MOD:
                    //kreirajNovogClana();
                    setTitle("Kreiraj novog clana");
                    lblAktivnost.setText(lblAktivnost.getText()+"Aktivan");
                    btnDeaktivirajClanstvo.setEnabled(false);
                    btnIzmeniPodatke.setEnabled(false);
                    btnSacuvajIzmene.setEnabled(false);
                    podesiPolja(false);
                    break;
                case CHANGE_MOD:
                    setTitle("Izmeni podatke clana");
                    btnKreirajClana.setEnabled(false);
                    btnZapamtiClana.setEnabled(false);
                    btnSacuvajIzmene.setEnabled(false);
                    namestiTxt(false);
                    setClan();
            }
        } catch (ServerskiException ex) {
            JOptionPane.showMessageDialog(this, ex,"GRESKA",JOptionPane.ERROR_MESSAGE);
            dispose();
            setVisible(false);
        } catch (Exception ex){
            JOptionPane.showMessageDialog(this, "Doslo je do prekida rada servera!","GRESKA",JOptionPane.ERROR_MESSAGE);
            dispose();
            setVisible(false);
        }
    }

    private void namestiComboBox() throws Exception {
        
        //try {
            DefaultComboBoxModel model1 =new DefaultComboBoxModel(OpstiKontrolerKI.getInstance().ucitajGradove().toArray());
            comboGradovi.setModel(model1);
            comboGradovi.setSelectedIndex(-1);
            DefaultComboBoxModel model2=new DefaultComboBoxModel(OpstiKontrolerKI.getInstance().ucitajVrsteClanskihKarata().toArray());
            comboVrstaClanskihKarata.setModel(model2);
            comboVrstaClanskihKarata.setSelectedIndex(-1);
        //} catch (Exception ex) {
            //Logger.getLogger(FrmMemberDetails.class.getName()).log(Level.SEVERE, null, ex);
           // JOptionPane.showMessageDialog(this, "Ne moze se ucitati lista gradova!","GRESKA",JOptionPane.ERROR_MESSAGE);
        //}
    }

    private void kreirajNovogClana() throws Exception {
       // try {
            clan=OpstiKontrolerKI.getInstance().kreirajClana(clan);
            if(clan==null){
                JOptionPane.showMessageDialog(this, "Ne moze se kreirati novi clan","UPOZORENJE",JOptionPane.ABORT);
            }else{
                txtSifra.setText(String.valueOf(clan.getSifra()));
                JOptionPane.showMessageDialog(this, "Kreiran je novi clan sa sifrom:"+clan.getSifra());
                
            }
        //} catch (Exception ex) {
            //JOptionPane.showMessageDialog(this, "Doslo je do greske prilikom kreiranja clana","GRESKA",JOptionPane.ERROR_MESSAGE);
        //}
    }
    
    public void setMod(MemberMod mod){
        this.mod=mod;
        namestiPolja();
    }

    private boolean proveriSvaPolja() {
        boolean uspesan=true;
        if(txtIme.getText().equals("")){
            uspesan=false;
            lblErrorIme.setVisible(true);
        }else{
            lblErrorIme.setVisible(false);
        }
        if(txtPrezime.getText().equals("")){
            uspesan=false;
            lblErrorPrezime.setVisible(true);
        }else{
            lblErrorPrezime.setVisible(false);
        }
        if(txtTelefon.getText().equals("")){
            uspesan=false;
            lblErrorTelefon.setVisible(true);
        }else{
            lblErrorTelefon.setVisible(false);
        }
        if(txtEmail.getText().equals("")){
            uspesan=false;
            lblErrorEmail.setVisible(true);
        }else{
            lblErrorEmail.setVisible(false);
        }
        if(txtLozinka.getText().equals("")){
            uspesan=false;
            lblErrorLoz.setVisible(true);
        }else{
            lblErrorLoz.setVisible(false);
        }
        if(comboGradovi.getSelectedIndex()==-1){
            uspesan=false;
            lblErrorGrad.setVisible(true);
        }else{
            lblErrorGrad.setVisible(false);
        }
        if(comboVrstaClanskihKarata.getSelectedIndex()==-1){
            uspesan=false;
            lblErrorVCK.setVisible(true);
        }else{
            lblErrorVCK.setVisible(false);
        }
        
        return uspesan;
    }

    private void namestiErrorLbl() {
        lblErrorEmail.setVisible(false);
        lblErrorIme.setVisible(false);
        lblErrorPrezime.setVisible(false);
        lblErrorLoz.setVisible(false);
        lblErrorTelefon.setVisible(false);
        lblErrorGrad.setVisible(false);
        lblErrorVCK.setVisible(false);
    }

    private void zapamtiClana() throws Exception {
        
            clan.setIme(txtIme.getText());
            clan.setPrezime(txtPrezime.getText());
            clan.setTelefon(txtTelefon.getText());
            clan.setAktivan(true);
            clan.setEmail(txtEmail.getText());
            clan.setLozinka(txtLozinka.getText());
            clan.setGrad((Grad)comboGradovi.getSelectedItem());
            clan.setVrstaClanskeKarte((String)comboVrstaClanskihKarata.getSelectedItem());
            boolean uspesno=OpstiKontrolerKI.getInstance().zapamtiClana(clan);
            if(uspesno){
                JOptionPane.showMessageDialog(this, "Podaci clana su uspesno zapamceni");
                if(mod==MemberMod.CHANGE_MOD){
                   dispose(); 
                }else {
                int option=JOptionPane.showConfirmDialog(this,"Da li hocete jos clanova da unesete?","",JOptionPane.YES_NO_OPTION);
                if(option==0){
                    clan=null;
                    btnKreirajClana.setEnabled(true);
                    podesiPolja(false);
                    refresujuPolja();
                }else{
                    dispose();
                }
                }
            }else{
                JOptionPane.showMessageDialog(this, "Ne moze se zapamtiti podaci!","UPOZORENJE",JOptionPane.ERROR);
            }
        
        
        
    }

    private void setClan() {
        txtSifra.setText(String.valueOf(clan.getSifra()));
        txtIme.setText(clan.getIme());
        txtPrezime.setText(clan.getPrezime());
        txtTelefon.setText(clan.getTelefon());
        txtEmail.setText(clan.getEmail());
        txtLozinka.setText(clan.getLozinka());
        lblAktivnost.setText(lblAktivnost.getText()+(clan.isAktivan()?"Aktivan":"Neaktivan"));
        comboGradovi.getModel().setSelectedItem(clan.getGrad());
        comboVrstaClanskihKarata.setSelectedItem(clan.getVrstaClanskeKarte());
        
    }

    private void namestiTxt(boolean b) {
        txtIme.setEnabled(b);
        txtPrezime.setEnabled(b);
        txtTelefon.setEnabled(b);
        txtEmail.setEnabled(b);
        txtLozinka.setEnabled(b);
        comboGradovi.setEnabled(b);
        comboVrstaClanskihKarata.setEnabled(b);
    }

    private void obrisiClana(){
        try {
            boolean uspesno=OpstiKontrolerKI.getInstance().obrisiClana(clan);
        } catch (ServerskiException ex) {
                    JOptionPane.showMessageDialog(this, ex,"GRESKA",JOptionPane.ERROR_MESSAGE);
        } catch(Exception ex){
                 JOptionPane.showMessageDialog(this,"Prekid rada servera","GRESKA",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void podesiPolja(boolean b) {
        txtIme.setEditable(b);
        txtPrezime.setEditable(b);
        txtEmail.setEditable(b);
        //txtSifra.setEditable(b);
        txtLozinka.setEditable(b);
        txtTelefon.setEditable(b);
        comboGradovi.setEditable(b);
        comboVrstaClanskihKarata.setEditable(b);
        btnZapamtiClana.setEnabled(b);
    }

    private void refresujuPolja() {
        txtEmail.setText("");
        txtIme.setText("");
        txtLozinka.setText("");
        txtPrezime.setText("");
        txtSifra.setText("");
        txtTelefon.setText("");
        comboGradovi.setSelectedIndex(-1);
        comboVrstaClanskihKarata.setSelectedIndex(-1);
    }

    private boolean proveriEmail() throws Exception {
        String email=txtEmail.getText();
        return OpstiKontrolerKI.getInstance().proveriEmail(email);
    }

    
    
    
}
